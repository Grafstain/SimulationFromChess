from ..entities import *
from ..core import *


class BoardConsoleRenderer:
    ANSI_RESET = "\u001B[0m"
    ANSI_WHITE_SQUARE_BACKGROUND = "\u001B[47m"
    ANSI_BLACK_SQUARE_BACKGROUND = "\u001B[0;100m"
    WIDE_SPACE = '\u2005'
    EN_SPACE = "\u2002"

    def get_background_color(self, coordinates: Coordinates) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –¥–ª—è –∫–ª–µ—Ç–∫–∏."""
        return (self.ANSI_BLACK_SQUARE_BACKGROUND 
                if Board.is_square_dark(coordinates) 
                else self.ANSI_WHITE_SQUARE_BACKGROUND)

    def get_entity_symbol(self, entity) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–∏."""
        if entity is None:
            return f"   {self.WIDE_SPACE}{self.EN_SPACE}"  # –¢—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞
        return f" {self.select_ascii_sprite_for_entity(entity)} "  # –°—É—â–µ—Å—Ç–≤–æ –º–µ–∂–¥—É –ø—Ä–æ–±–µ–ª–∞–º–∏

    def render(self, board):
        """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è."""
        output = []
        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–æ–ª—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
        for y in range(board.height, 0, -1):
            row = f"{y:2d} "
            for x in range(1, board.width + 1):
                coord = Coordinates(x, y)
                entity = board.get_piece(coord)
                bg_color = self.get_background_color(coord)
                cell = f"{bg_color}{self.get_entity_symbol(entity)}{self.ANSI_RESET}"
                row += cell
            output.append(row)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
        col_numbers = "     " + f"  {self.WIDE_SPACE}{self.EN_SPACE}".join(f"{x}" for x in range(1, board.width + 1))
        output.append(col_numbers)
        
        # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–µ
        rendered_board = "\n".join(output)
        print(rendered_board)
        print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å –ª–æ–≥–æ–º
        
        return rendered_board

    def render_without_entity(self, board):
        """–†–µ–Ω–¥–µ—Ä–∏—Ç —Ç–æ–ª—å–∫–æ –ø—É—Å—Ç—É—é –¥–æ—Å–∫—É –±–µ–∑ —Å—É—â–µ—Å—Ç–≤"""
        for rank in range(board.height, 0, -1):
            line = f"{rank:2}"
            for file in range(1, board.width+1):
                coordinates = Coordinates(file, rank)
                line += self.get_sprite_for_empty_square(coordinates)
            line += self.ANSI_RESET
            print(line)
        header = "    " + " ".join(f"{i + 1:3}" for i in range(board.width))
        print(header)

    def get_sprite_for_empty_square(self, coordinates: Coordinates) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø—Ä–∞–π—Ç –¥–ª—è –ø—É—Å—Ç–æ–π –∫–ª–µ—Ç–∫–∏."""
        background_color = self.get_background_color(coordinates)
        return f"{background_color}{self.EM_SPACE}{self.EM_SPACE}{self.EM_SPACE}{self.ANSI_RESET}"

    def select_ascii_sprite_for_entity(self, entity) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–∏."""
        if isinstance(entity, Herbivore):
            return "üêá"
        if isinstance(entity, Predator):
            return "üêÖ"
        if isinstance(entity, Grass):
            return "üåæ"
        if isinstance(entity, Stone):
            return "üåë"

    def get_entity_sprite(self, entity) -> str:
        sprite = f" {self.select_ascii_sprite_for_entity(entity)} "
        background_color = self.ANSI_BLACK_SQUARE_BACKGROUND if Board.is_square_dark(
            entity.coordinates) else self.ANSI_WHITE_SQUARE_BACKGROUND
        return f"{background_color}{sprite}"

    @staticmethod
    def display_log(board):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—É—â–µ—Å—Ç–≤–∞—Ö."""
        print("\n–û–±—ä–µ–∫—Ç—ã –Ω–∞ –ø–æ–ª–µ:")
        for coordinates, entity in board.entities.items():
            if isinstance(entity, (Herbivore, Predator)):
                print(f"{entity}\t({coordinates.x}, {coordinates.y})\t{entity.hp} energy")
        print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –ª–æ–≥–∞

    @staticmethod
    def display_common_creature_info(board):
        print("–û–±—ä–µ–∫ÔøΩÔøΩ—ã –Ω–∞ –ø–æ–ª–µ:")
        herbivore_count = sum(1 for entity in board.entities.values() if isinstance(entity, Herbivore))
        predator_count = sum(1 for entity in board.entities.values() if isinstance(entity, Predator))
        grass_count = sum(1 for entity in board.entities.values() if isinstance(entity, Grass))
        print(f"Herbivore:\t{herbivore_count}\n"
              f"Predator:\t{predator_count}\n"
              f"Grass:\t\t{grass_count}")
